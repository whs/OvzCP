OvzCP hooks into major system services so it might be little complicated to install.
Patch for a good command line based installer is apprecated.

OvzCP was developed on Debian lenny and access OpenVZ data from /etc/vz/. RedHat based system
might be unable to run OvzCP.

1. Install dependencies

- python-pycurl
- python-simplejson
- python-sqlobject
- python-pybabel
- Varnish
  Note that lenny's varnish is version 1 and the latest version is 2 which is in backports.
  Version 2 brings new additions such as reloading without restarting. OvzCP does support
  this feature and will use if detected so I recommends you to use backports' varnish package.
- Of course, OpenVZ
  Read the instructions (in Thai) at http://www.thaitux.info/node/675 or http://debianclub.org/node/479
  (both are same) you don't need to create any VM right now.
- OpenVZ templates
  http://download.openvz.org/template/precreated/
- munin munin-node

2. Extract ovzcp or branch from trunk to /opt/ovzcp
3. $ cd /opt/ovzcp
4. $ python models.py
5. Edit config.ini
    - [auth] secret: Change it to be anything that's not the default
    - [auth] cron_key: Change it to be anything that's not the default. Should match [a-zA-Z0-9]
    - [varnish] noMatch: Varnish backend name to use when no matching condition are found.
    - [varnish] ovzcphost: Domain name of OvzCP
    - [iface] allowed: Interfaces that OvzCP's port forwarding system can use
6. Edit /etc/default/varnish
    - Use the alternative 2 configuration by remove all # from front of every lines in that section
    - Make sure that the first line of the alternative 2 is like this:
       DAEMON_OPTS="-a :80 \
       This make Varnish binds on port 80, every interfaces
7. Edit /etc/varnish/default.vcl:
   - At top, near the default backend definition remove any backend declaration and type
     include "/opt/ovzcp/sysconf/varnishbackend.vcl";
   - Replace sub vcl_recv with:

sub vcl_recv{
	include "/opt/ovzcp/sysconf/varnishrecv.vcl";
	pipe;
}

    - Save
    - Regenerate varnish configuration with python varnish.py
8. $ python vmfw.py
   $ chmod +x sysconf/vmfw.sh
9. Edit /etc/rc.local
    - Add these lines before exit 0:

/opt/ovzcp/sysconf/vmfw.sh
/opt/ovzcp/start-ovzcp

10. Edit cron (crontab -e) Add these lines

	* * * * * wget http://OVZCPHOST/_cron?cron_key=CRON_KEY -O - > /dev/null 2>/dev/null
	
    (Do not forget to replace YOUROVZCPHOST and CRON_KEY with the value in your configuration
    
11. $ python munin.py
      # chown munin:munin /opt/ovzcp/static/munin
12. Remove /etc/munin/munin.conf and replaces with symlink to /opt/ovzcp/sysconf/munin.conf 

	$ ln -s /opt/ovzcp/sysconf/munin.conf /etc/munin/munin.conf
	
13. Reboot your system with init 6 and have fun with OvzCP!
